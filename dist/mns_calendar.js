// Generated by CoffeeScript 1.10.0
(function() {
  var slice = [].slice;

  (function($, window) {
    var MnsCalendar, fn, j, len, ref, tag_name;
    window.tag = function() {
      var attrs, child, id, j, klass, len, name, obj, params, sc;
      name = arguments[0], params = 2 <= arguments.length ? slice.call(arguments, 1) : [];
      obj = $("<" + name + ">");
      if (typeof params[0] === 'string') {
        sc = params.shift();
        klass = sc.match(/\.[-_0-9a-z]+/gi).join('').replace(/\./g, ' ').trim();
        id = ((sc.match(/\#[-_0-9a-z]+/gi) || [])[0] || '').slice(1);
        obj.attr({
          "class": klass,
          id: id === '' ? null : id
        });
      }
      if (typeof params[0] === 'object' && params[0].constructor.name === 'Object') {
        attrs = params.shift();
        console.log(attrs);
        obj.attr(attrs);
      }
      for (j = 0, len = params.length; j < len; j++) {
        child = params[j];
        if (typeof child === 'string') {
          obj.append(document.createTextNode(child));
        } else {
          obj.append(child);
        }
      }
      return obj;
    };
    ref = ['div', 'i', 'span', 'a', 'nav'];
    fn = function(s) {
      return window[s] = function() {
        var params;
        params = 1 <= arguments.length ? slice.call(arguments, 0) : [];
        return tag.apply(null, [s].concat(slice.call(params)));
      };
    };
    for (j = 0, len = ref.length; j < len; j++) {
      tag_name = ref[j];
      fn(tag_name);
    }
    window['nbsp'] = document.createTextNode(String.fromCharCode(160));
    MnsCalendar = (function() {
      var prefix;

      prefix = 'mns-cal';

      MnsCalendar.prototype.defaults = {
        title: 'MNS Calendar',
        date: [(new Date()).getMonth(), (new Date()).getFullYear()],
        i18n: {
          lang: 'pl',
          translations: {
            today: 'Dzisiaj',
            next: 'Następny miesiąc',
            prev: 'Poprzedni miesiąc',
            week: 'Tydzień'
          }
        }
      };

      function MnsCalendar(el, options) {
        this.options = $.extend({}, this.defaults, options);
        this.$el = $(el);
        this.$el.append($('<div class="mns-cal" />').append(this.setup_skeleton()));
        this.render();
      }

      MnsCalendar.prototype.myMethod = function(echo) {
        return this.$el.html(this.options.paramA + ': ' + echo);
      };

      MnsCalendar.prototype.set_month = function(month, year) {
        return console.log(month, year);
      };

      MnsCalendar.prototype.get_data = function() {};

      MnsCalendar.prototype.render = function() {
        return this.$el.find('.mns-cal-title').text('Hello');
      };

      MnsCalendar.prototype.reshow = function() {};

      MnsCalendar.prototype.update = function() {};

      MnsCalendar.prototype.setup_skeleton = function() {
        var body, form, header, navbar, t;
        t = {
          'today': 'dzisiaj'
        };
        header = div('.navbar-header', div('.navbar-brand', i('.fa.fa-calendar'), nbsp, span('.mns-cal-title')), div('.navbar-text.mns-cal-date'));
        form = div('.navbar-form.navbar-right', div('.btn-toolbar', div('.btn-group', a('.btn.btn-default.mns-cal-today', t['today'])), div('.btn-group', a('.btn.btn-default.mns-cal-prev', i('.fa.fa-angle-left')), a('.btn.btn-default.mns-cal-next', i('.fa.fa-angle-right')))));
        navbar = nav('.navbar.navbar-default', div('.container-fluid', header, form));
        body = div('.panel.panel-default');
        return div('.mns-cal', navbar, body);
      };

      return MnsCalendar;

    })();
    return $.fn.extend({
      MnsCalendar: function() {
        var args, option;
        option = arguments[0], args = 2 <= arguments.length ? slice.call(arguments, 1) : [];
        return this.each(function() {
          var $this, data;
          $this = $(this);
          data = $this.data('mnsCalendar');
          if (!data) {
            $this.data('mnsCalendar', (data = new MnsCalendar(this, option)));
          }
          if (typeof option === 'string') {
            return data[option].apply(data, args);
          }
        });
      }
    });
  })(window.jQuery, window);

  $(function() {
    return $('body').append(a('.btn.btn-default.btn-xs', {
      href: 'http://www.google.com'
    }, i('.fa.fa-birthday-cake'), ' Happy Birthday'));
  });

}).call(this);
